{"version":3,"sources":["components/task.js","components/item.js","components/completedList.js","components/todo.js","components/notFound.js","App.js","serviceWorker.js","index.js"],"names":["Task","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleTodoCheckbox","event","itemId","target","getAttribute","jQuery","is","find","hide","show","handleTodoBlur","disabled","dvalue","val","handleTodoChange","updateState","value","handleTodoEdit","itemName","isItemExists","attr","focus","handleTodoSave","localName","editItem","trim","length","alert","catchedList","todo","forEach","itemObj","index","id","name","setItem","JSON","stringify","handleTodoDelete","splice","handleTodoCompleted","catchedCompleted","completed","push","renderTodoList","todoArr","map","object","react_default","a","createElement","className","key","data-id","type","onChange","defaultValue","onBlur","onFocus","data-name","onClick","onMouseDown","bind","assertThisInitialized","Component","Item","handleAddChange","handleAddSubmit","preventDefault","newItem","localTodo","Date","getTime","document","getElementById","autoFocus","CompletedList","renderCompletedList","completedArr","handleComponentDelete","Todo","componentDidMount","window","title","getItem","parse","sobj","setState","localStorage","isTodoItemExists","state","isCompletedItemExists","list","isExists","obj","item","task","completedList","NotFound","react_router_dom","to","App","renderRedirect","location","search","indexOf","url","pathname","slice","react_router","exact","from","path","component","Boolean","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2693b35e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport jQuery from \"jquery\";\r\n\r\nclass Task extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleTodoEdit = this.handleTodoEdit.bind(this);\r\n    this.handleTodoSave = this.handleTodoSave.bind(this);\r\n    this.handleTodoBlur = this.handleTodoBlur.bind(this);\r\n    this.handleTodoChange = this.handleTodoChange.bind(this);\r\n    this.handleTodoDelete = this.handleTodoDelete.bind(this);\r\n    this.handleTodoCheckbox = this.handleTodoCheckbox.bind(this);\r\n    this.handleTodoCompleted = this.handleTodoCompleted.bind(this);\r\n  }\r\n\r\n  // Show Completed button while check the checkbox\r\n  // Show Edit and Delele while uncheck the checkbox\r\n  handleTodoCheckbox = event => {\r\n    var itemId = event.target.getAttribute(\"data-id\");\r\n    var checked = jQuery(event.target).is(\":checked\");\r\n    if (checked) {\r\n      jQuery(\"#parent\" + itemId)\r\n        .find(\".todoEdit, .todoSave, .todoDelete\")\r\n        .hide();\r\n      jQuery(\"#parent\" + itemId)\r\n        .find(\".todoCompleted\")\r\n        .show();\r\n    } else {\r\n      jQuery(\"#parent\" + itemId)\r\n        .find(\".todoEdit, .todoDelete\")\r\n        .show();\r\n      jQuery(\"#parent\" + itemId)\r\n        .find(\".todoSave, .todoCompleted\")\r\n        .hide();\r\n    }\r\n  };\r\n\r\n  // Go back to old state while blur the input box\r\n  // Show Edit button and hide Save button\r\n  handleTodoBlur = event => {\r\n    event.target.disabled = true;\r\n    var itemId = event.target.getAttribute(\"id\");\r\n    jQuery(\"#parent\" + itemId)\r\n      .find(\".todoEdit\")\r\n      .show();\r\n    jQuery(\"#parent\" + itemId)\r\n      .find(\".todoSave\")\r\n      .hide();\r\n\r\n    var dvalue = event.target.getAttribute(\"dvalue\");\r\n    jQuery(\"#\" + itemId).val(dvalue);\r\n  };\r\n\r\n  handleTodoChange = event => {\r\n    this.props.updateState(\"editItem\", event.target.value);\r\n  };\r\n\r\n  // Show Save button and hide Edit button while clicking on Edit button\r\n  handleTodoEdit = event => {\r\n    var itemId = event.target.getAttribute(\"data-id\");\r\n    var itemName = event.target.getAttribute(\"data-name\");\r\n    if (this.props.isItemExists(itemName)) {\r\n      jQuery(\"#\" + itemId).attr(\"disabled\", false);\r\n      jQuery(\"#\" + itemId).focus();\r\n\r\n      jQuery(\"#parent\" + itemId)\r\n        .find(\".todoEdit\")\r\n        .hide();\r\n      jQuery(\"#parent\" + itemId)\r\n        .find(\".todoSave\")\r\n        .show();\r\n    }\r\n  };\r\n\r\n  // Save modified text after validation\r\n  handleTodoSave = event => {\r\n    var localName = this.props.editItem;\r\n    var itemId = event.target.getAttribute(\"data-id\");\r\n\r\n    localName = localName.trim();\r\n    if (localName.length === 0) {\r\n      alert(\"Item name is required\");\r\n    } else if (localName.length < 5) {\r\n      alert(\"Item name must be at least 5 characters\");\r\n    } else if (this.props.isItemExists(localName)) {\r\n      alert(\"Item name is already exists\");\r\n    } else {\r\n      var catchedList = this.props.todo;\r\n      catchedList.forEach((itemObj, index) => {\r\n        if (itemId === \"\" + itemObj.id) {\r\n          catchedList[index] = { id: itemId, name: localName };\r\n        }\r\n      });\r\n\r\n      this.props.updateState(\"editItem\", \"\");\r\n      this.props.updateState(\"todo\", catchedList);\r\n      this.props.setItem(\"vivriti-Todo\", JSON.stringify(catchedList));\r\n    }\r\n  };\r\n\r\n  // Delete task from todo list while clicking on delete button\r\n  handleTodoDelete = event => {\r\n    var itemId = event.target.getAttribute(\"data-id\");\r\n    var itemName = event.target.getAttribute(\"data-name\");\r\n    if (this.props.isItemExists(itemName)) {\r\n      var catchedList = this.props.todo;\r\n\r\n      catchedList.forEach((itemObj, index) => {\r\n        if (itemId === \"\" + itemObj.id) {\r\n          catchedList.splice(index, 1);\r\n        }\r\n      });\r\n\r\n      this.props.updateState(\"todo\", catchedList);\r\n      this.props.setItem(\"vivriti-Todo\", JSON.stringify(catchedList));\r\n    }\r\n  };\r\n\r\n  // Mark task as completed while clicking on Completed button\r\n  handleTodoCompleted = event => {\r\n    var itemId = event.target.getAttribute(\"data-id\");\r\n    var itemName = event.target.getAttribute(\"data-name\");\r\n    if (this.props.isItemExists(itemName)) {\r\n      var catchedCompleted = this.props.completed;\r\n      var catchedList = this.props.todo;\r\n\r\n      catchedList.forEach((itemObj, index) => {\r\n        if (itemId === \"\" + itemObj.id) {\r\n          catchedList.splice(index, 1);\r\n          catchedCompleted.push({\r\n            id: itemId,\r\n            name: itemName\r\n          });\r\n        }\r\n      });\r\n\r\n      this.props.updateState(\"completed\", catchedCompleted);\r\n      this.props.setItem(\r\n        \"vivriti-Todo-completed\",\r\n        JSON.stringify(catchedCompleted)\r\n      );\r\n\r\n      this.props.updateState(\"todo\", catchedList);\r\n      this.props.setItem(\"vivriti-Todo\", JSON.stringify(catchedList));\r\n    }\r\n  };\r\n\r\n  // Render task list\r\n  renderTodoList = () => {\r\n    var todoArr = this.props.todo;\r\n    var todoLen = todoArr.length;\r\n    if (todoLen > 0) {\r\n      return todoArr.map(object => {\r\n        return (\r\n          <div\r\n            id={\"parent\" + object.id}\r\n            className=\"Todo-list-child\"\r\n            key={object.id}\r\n          >\r\n            <input\r\n              data-id={object.id}\r\n              type=\"checkbox\"\r\n              onChange={this.handleTodoCheckbox}\r\n            />\r\n            <input\r\n              id={object.id}\r\n              type=\"text\"\r\n              dvalue={object.name}\r\n              className=\"text-overflow\"\r\n              defaultValue={object.name}\r\n              onBlur={this.handleTodoBlur}\r\n              onFocus={this.handleTodoChange}\r\n              onChange={this.handleTodoChange}\r\n              disabled\r\n            />\r\n            <button\r\n              className=\"todoEdit cpointer fleft\"\r\n              data-id={object.id}\r\n              data-name={object.name}\r\n              onClick={this.handleTodoEdit}\r\n            >\r\n              Edit\r\n            </button>\r\n            <button\r\n              className=\"todoSave cpointer fleft dnone\"\r\n              data-id={object.id}\r\n              data-name={object.name}\r\n              onMouseDown={this.handleTodoSave}\r\n            >\r\n              Save\r\n            </button>\r\n            <button\r\n              className=\"todoDelete cpointer fleft\"\r\n              data-id={object.id}\r\n              data-name={object.name}\r\n              onClick={this.handleTodoDelete}\r\n            >\r\n              Delete\r\n            </button>\r\n            <button\r\n              className=\"todoCompleted cpointer fleft dnone\"\r\n              data-id={object.id}\r\n              data-name={object.name}\r\n              onClick={this.handleTodoCompleted}\r\n            >\r\n              Completed\r\n            </button>\r\n          </div>\r\n        );\r\n      });\r\n    } else {\r\n      return (\r\n        <div className=\"Todo-zero-list\">\r\n          <h1 className=\"tcenter\">No Todo list</h1>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  // Default render function\r\n  render() {\r\n    return (\r\n      <div className=\"Todo-child\">\r\n        <h1 className=\"Todo-h1\">TODO</h1>\r\n        <div className=\"w100\">\r\n          <div className=\"Todo-add-main\">{this.renderTodoList()}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Task;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Item extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleAddChange = this.handleAddChange.bind(this);\r\n    this.handleAddSubmit = this.handleAddSubmit.bind(this);\r\n  }\r\n\r\n  // update modified text in newItem\r\n  handleAddChange = event => {\r\n    this.props.updateState(\"newItem\", event.target.value);\r\n  };\r\n\r\n  // Add new item in todo list after validation\r\n  handleAddSubmit = event => {\r\n    event.preventDefault();\r\n    var localName = this.props.newItem;\r\n\r\n    localName = localName.trim();\r\n    if (localName.length === 0) {\r\n      alert(\"Item name is required\");\r\n    } else if (localName.length < 5) {\r\n      alert(\"Item name must be at least 5 characters\");\r\n    } else if (this.props.isItemExists(localName)) {\r\n      alert(\"Item name is already exists\");\r\n    } else {\r\n      var localTodo = this.props.todo;\r\n      localTodo.push({\r\n        id: new Date().getTime(),\r\n        name: localName\r\n      });\r\n\r\n      this.props.updateState(\"newItem\", \"\");\r\n      this.props.updateState(\"todo\", localTodo);\r\n      this.props.setItem(\"vivriti-Todo\", JSON.stringify(localTodo));\r\n\r\n      document.getElementById(\"addNewItem\").value = \"\";\r\n    }\r\n  };\r\n\r\n  // Default render function\r\n  render() {\r\n    return (\r\n      <div className=\"Todo-child\">\r\n        <h1 className=\"Todo-h1\">ADD ITEM</h1>\r\n        <div className=\"w100\">\r\n          <div className=\"Todo-add-main\">\r\n            <input\r\n              id=\"addNewItem\"\r\n              className=\"Todo-add-input\"\r\n              type=\"text\"\r\n              onChange={this.handleAddChange}\r\n              autoFocus\r\n            />\r\n            <button\r\n              className=\"Todo-add-button cpointer\"\r\n              onClick={this.handleAddSubmit}\r\n            >\r\n              Add\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Item;\r\n","import React, { Component } from \"react\";\r\n\r\nclass CompletedList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleComponentDelete = this.handleComponentDelete.bind(this);\r\n  }\r\n\r\n  // Render completed list\r\n  renderCompletedList = () => {\r\n    var completedArr = this.props.completed;\r\n    var completedLen = completedArr.length;\r\n    if (completedLen > 0) {\r\n      return completedArr.map(object => {\r\n        return (\r\n          <div className=\"Todo-list-child\" key={object.id}>\r\n            <input\r\n              disabled\r\n              type=\"text\"\r\n              id={object.id}\r\n              defaultValue={object.name}\r\n              className=\"Todo-list-completed\"\r\n            />\r\n            <button\r\n              className=\"todoDelete cpointer fright\"\r\n              data-id={object.id}\r\n              data-name={object.name}\r\n              onClick={this.handleComponentDelete}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        );\r\n      });\r\n    } else {\r\n      return (\r\n        <div className=\"Todo-zero-list\">\r\n          <h1 className=\"tcenter\">No Completed list</h1>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  // Delete component list\r\n  handleComponentDelete = event => {\r\n    var itemId = event.target.getAttribute(\"data-id\");\r\n    var itemName = event.target.getAttribute(\"data-name\");\r\n    if (this.props.isItemExists(itemName)) {\r\n      var catchedList = this.props.completed;\r\n\r\n      catchedList.forEach((itemObj, index) => {\r\n        if (itemId === \"\" + itemObj.id) {\r\n          catchedList.splice(index, 1);\r\n        }\r\n      });\r\n\r\n      this.props.updateState(\"completed\", catchedList);\r\n      this.props.setItem(\"vivriti-Todo-completed\", JSON.stringify(catchedList));\r\n    }\r\n  };\r\n\r\n  // Default render function\r\n  render() {\r\n    return (\r\n      <div className=\"Todo-child\">\r\n        <h1 className=\"Todo-h1\">COMPLETED</h1>\r\n        <div className=\"w100\">\r\n          <div className=\"Todo-add-main\">{this.renderCompletedList()}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CompletedList;\r\n","import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\nimport Task from \"../components/task\";\r\nimport Item from \"../components/item\";\r\nimport CompletedList from \"../components/completedList\";\r\n\r\nclass Todo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      newItem: \"\",\r\n      editItem: \"\",\r\n      todo: [],\r\n      completed: []\r\n    };\r\n  }\r\n\r\n  // Fetching todo info from local storage\r\n  componentDidMount = () => {\r\n    window.document.title = \"Todo App\";\r\n    var todoArr = this.getItem(\"vivriti-Todo\");\r\n    if (todoArr && todoArr.length > 0) {\r\n      this.updateState(\"todo\", JSON.parse(todoArr));\r\n    }\r\n\r\n    var completedArr = this.getItem(\"vivriti-Todo-completed\");\r\n    if (completedArr && completedArr.length > 0) {\r\n      this.updateState(\"completed\", JSON.parse(completedArr));\r\n    }\r\n  };\r\n\r\n  // Update state info\r\n  updateState = (key, value) => {\r\n    let sobj = {};\r\n    sobj[key] = value;\r\n    this.setState(sobj);\r\n  };\r\n\r\n  // Set state info in local storage\r\n  setItem = (key, value) => {\r\n    window.localStorage.setItem(key, value);\r\n  };\r\n\r\n  // Fetch state info from local storage\r\n  getItem = key => {\r\n    return window.localStorage.getItem(key);\r\n  };\r\n\r\n  // Check name is exists in todo list\r\n  isTodoItemExists = localName => {\r\n    return this.isItemExists(localName, this.state.todo);\r\n  };\r\n\r\n  // Check name is exists in completed list\r\n  isCompletedItemExists = localName => {\r\n    return this.isItemExists(localName, this.state.completed);\r\n  };\r\n\r\n  // Check name is exists or not\r\n  isItemExists = (localName, list) => {\r\n    var isExists = false;\r\n    localName = localName.trim();\r\n    list.forEach(obj => {\r\n      if (localName === obj.name) {\r\n        isExists = true;\r\n      }\r\n    });\r\n    return isExists;\r\n  };\r\n\r\n  // Default render function\r\n  render() {\r\n    return (\r\n      <div className=\"Todo-parent w100 tcenter\">\r\n        <div className=\"Todo-main\">\r\n          <Item\r\n            todo={this.state.todo}\r\n            newItem={this.state.newItem}\r\n            isItemExists={this.isTodoItemExists}\r\n            updateState={this.updateState}\r\n            setItem={this.setItem}\r\n          />\r\n          <Task\r\n            todo={this.state.todo}\r\n            editItem={this.state.editItem}\r\n            completed={this.state.completed}\r\n            isItemExists={this.isTodoItemExists}\r\n            updateState={this.updateState}\r\n            setItem={this.setItem}\r\n          />\r\n          <CompletedList\r\n            completed={this.state.completed}\r\n            isItemExists={this.isCompletedItemExists}\r\n            updateState={this.updateState}\r\n            setItem={this.setItem}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Todo;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass NotFound extends Component {\r\n\r\n    componentDidMount = () => {\r\n        window.document.title = \"404\";\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"notFound-inner\">\r\n                Page Not Found\r\n                <ul className=\"notFound-inner-ul\">\r\n                    <li className=\"notFound-inner-li\">\r\n                        <Link to=\"/\">Go to Home</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotFound;","import React, { Component } from \"react\";\r\nimport { Route, Link, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport \"./App.css\";\r\nimport Todo from \"./components/todo\";\r\nimport NotFound from \"./components/notFound\";\r\n\r\nclass App extends Component {\r\n\r\n  renderRedirect = () => {\r\n    let search = window.location.search;\r\n    if(search.indexOf(\"?p=\") !== -1) {\r\n      let url = window.location.pathname + window.location.search.slice(3);\r\n      return <Redirect to={url} />\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        { this.renderRedirect() }\r\n        <header className=\"App-header w100\">\r\n          <span className=\"App-icon fleft\" />\r\n          <Link to=\"/\" className=\"App-name fleft cpointer\">\r\n            To Do App\r\n          </Link>\r\n        </header>\r\n\r\n        <div className=\"App-container fleft\">\r\n          <Switch>\r\n            <Redirect exact from=\"/\" to=\"todo\" />\r\n            <Route exact path=\"/todo\" component={Todo} />\r\n            <Route path=\"*\" component={NotFound} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}